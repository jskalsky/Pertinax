using System;
using System.Windows;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using WpfControlLibrary.DataModel;

namespace WpfControlLibrary.DataModel
{
  public static class DefaultDataModel
  {
    public static DataModelNamespace DataModelNamespace0 { get; set; }
    public static DataModelNamespace DataModelNamespace1 { get; set; }
    public static DataModelNamespace DataModelNamespace2 { get; set; }
    public static DataModelFolder FolderZ2Xx { get; set; }
    public static DataModelFolder FolderObjectTypes { get; set; }
    public static DataModelFolder FolderObjects { get; set; }
    public static DataModelFolder FolderVariables { get; set; }
    
    public static void Setup(ObservableCollection<DataModelNode> dataModel)
    {
      DataModelNamespace0 = new DataModelNamespace(0);
      DataModelNamespace1 = new DataModelNamespace(1);
      DataModelNamespace2 = new DataModelNamespace(2);
      dataModel.Add(DataModelNamespace0);
      dataModel.Add(DataModelNamespace1);
      dataModel.Add(DataModelNamespace2);
      FolderZ2Xx = new DataModelFolder("Z2xx", NodeIdBase.GetNextSystemNodeId(1), DataModelNamespace1);
      FolderObjectTypes = new DataModelFolder("ObjectTypes", NodeIdBase.GetNextSystemNodeId(1), DataModelNamespace1);
      FolderObjects = new DataModelFolder("Objects", NodeIdBase.GetNextSystemNodeId(1), DataModelNamespace1);
      FolderVariables = new DataModelFolder("Variables", NodeIdBase.GetNextSystemNodeId(1), DataModelNamespace1);
      FolderZ2Xx.AddChildren(FolderObjects);
      FolderZ2Xx.AddChildren(FolderObjectTypes);
      FolderZ2Xx.AddChildren(FolderVariables);
      DataModelNamespace1.AddChildren(FolderZ2Xx);
      DataModelNode parent = DataModelNamespace0;
      Stack<DataModelNode> stack = new Stack<DataModelNode>();
      DataModelNode node = null;
      node = new DataModelFolder("Objects", new NodeIdNumeric(0,85), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelObjectVariable("Server", new NodeIdNumeric(0,2253), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelSimpleVariable("Auditing", new NodeIdNumeric(0, 2994), "Boolean", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("ServiceLevel", new NodeIdNumeric(0, 2267), "UInt8", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelObjectVariable("ServerRedundancy", new NodeIdNumeric(0,2296), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelSimpleVariable("RedundancySupport", new NodeIdNumeric(0, 3709), "Int32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelObjectVariable("VendorServerInfo", new NodeIdNumeric(0,2295), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelObjectVariable("ServerDiagnostics", new NodeIdNumeric(0,2274), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelSimpleVariable("EnabledFlag", new NodeIdNumeric(0, 2294), "Boolean", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelObjectVariable("ServerCapabilities", new NodeIdNumeric(0,2268), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MaxHistoryContinuationPoints", new NodeIdNumeric(0, 2737), "UInt16", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MaxQueryContinuationPoints", new NodeIdNumeric(0, 2736), "UInt16", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MaxBrowseContinuationPoints", new NodeIdNumeric(0, 2735), "UInt16", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MinSupportedSampleRate", new NodeIdNumeric(0, 2272), "Double", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelFolder("AggregateFunctions", new NodeIdNumeric(0,2997), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelFolder("ModellingRules", new NodeIdNumeric(0,2996), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelObjectVariable("ExposesItsArray", new NodeIdNumeric(0,83), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelSimpleVariable("NamingRule", new NodeIdNumeric(0, 114), "Int32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelObjectVariable("Mandatory", new NodeIdNumeric(0,78), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelSimpleVariable("NamingRule", new NodeIdNumeric(0, 112), "Int32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelObjectVariable("MandatoryPlaceholder", new NodeIdNumeric(0,11510), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelSimpleVariable("NamingRule", new NodeIdNumeric(0, 11511), "Int32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelObjectVariable("Optional", new NodeIdNumeric(0,80), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelSimpleVariable("NamingRule", new NodeIdNumeric(0, 113), "Int32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelObjectVariable("OptionalPlaceholder", new NodeIdNumeric(0,11508), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelSimpleVariable("NamingRule", new NodeIdNumeric(0, 11509), "Int32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelObjectVariable("OperationLimits", new NodeIdNumeric(0,11704), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelSimpleVariable("MaxMonitoredItemsPerCall", new NodeIdNumeric(0, 11714), "UInt32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MaxNodesPerNodeManagement", new NodeIdNumeric(0, 11713), "UInt32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MaxNodesPerTranslateBrowsePathsToNodeIds", new NodeIdNumeric(0, 11712), "UInt32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MaxNodesPerRegisterNodes", new NodeIdNumeric(0, 11711), "UInt32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MaxNodesPerBrowse", new NodeIdNumeric(0, 11710), "UInt32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MaxNodesPerMethodCall", new NodeIdNumeric(0, 11709), "UInt32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MaxNodesPerWrite", new NodeIdNumeric(0, 11707), "UInt32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("MaxNodesPerRead", new NodeIdNumeric(0, 11705), "UInt32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelSimpleVariable("SecondsTillShutdown", new NodeIdNumeric(0, 2992), "UInt32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelSimpleVariable("State", new NodeIdNumeric(0, 2259), "Int32", "Write", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelFolder("Types", new NodeIdNumeric(0,86), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelFolder("ReferenceTypes", new NodeIdNumeric(0,91), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelFolder("DataTypes", new NodeIdNumeric(0,90), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      node = new DataModelObjectVariable("OPC Binary", new NodeIdNumeric(0,93), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      stack.Push(parent);
      parent = node;
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelObjectVariable("XML Schema", new NodeIdNumeric(0,92), "ObjectType", parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelFolder("VariableTypes", new NodeIdNumeric(0,89), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelFolder("ObjectTypes", new NodeIdNumeric(0,88), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelFolder("EventTypes", new NodeIdNumeric(0,3048), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      node = new DataModelFolder("InterfaceTypes", new NodeIdNumeric(0,17708), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
      parent = stack.Pop();
      node = new DataModelFolder("Views", new NodeIdNumeric(0,87), parent);
      parent.AddChildren(node);
      stack.Push(parent);
      parent = node;
      parent = stack.Pop();
    }
  }
}
